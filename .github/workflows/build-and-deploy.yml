name: Build and Deploy

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./vault_demo  # Replace with the subdirectory if your project is not in the root

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_REGISTORY_TOKEN }}

      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-

      - name: Build with Maven Wrapper
        run: ./mvnw clean package compile jib:build

      - name: Archive build artifacts
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: ${{ github.workspace }}/vault_demo/dekorate_k8s_output/*.yml  # Adjust the path to your generated YAML file

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
      - name: Read data
        run: cat ${{ github.workspace }}/vault_demo/dekorate_k8s_output/*.yml

      # - name: Checkout target repository
      #   uses: actions/checkout@v3
      #   with:
      #     repository: Nikhil12894/argocd_repo  # Replace with the owner and name of the target repo
      #     path: ./vault_demo
      #     ref: main
      #     token: ${{ secrets.PAT_TOKEN }}  # Use the personal access token for authentication

      # - name: Copy artifacts to target repository
      #   run: cp ${{ github.workspace }}/vault_demo/dekorate_k8s_output/*.yml ./vault_demo  # Adjust the path as needed

      # - name: Configure Git
      #   run: |
      #     git config --global user.name "github-actions[bot]"
      #     git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # - name: Commit and push changes
      #   run: |
      #     cd target-repo
      #     git add .
      #     git commit -m "Add generated YAML file"
      #     git push
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
